{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/DataTable/DataTable.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Checkbox, Paper } from \"@material-ui/core\";\nimport EnhancedTableHead from \"./EnhancedTableHeader\";\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    paddingTop: theme.spacing(2)\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  }\n}));\n\nfunction DataTable({\n  data = [],\n  orderByDefault,\n  cellConfigs,\n  checkbox\n}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState((orderByDefault === null || orderByDefault === void 0 ? void 0 : orderByDefault.order) || \"asc\");\n  const [orderBy, setOrderBy] = React.useState((orderByDefault === null || orderByDefault === void 0 ? void 0 : orderByDefault.orderBy) || \"title\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      // Get id foreach row and selected\n      const newSelecteds = data.map(({\n        _id: id\n      }) => id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleCheck = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  const renderCheckbox = (isItemSelected, id) => {\n    if (checkbox) {\n      return __jsx(TableCell, {\n        padding: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, __jsx(Checkbox, {\n        checked: isItemSelected,\n        onChange: event => handleCheck(event, id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }));\n    }\n  };\n\n  const renderCell = row => {\n    return cellConfigs.map(cell => __jsx(TableCell, {\n      key: row[cell.id],\n      component: \"th\",\n      scope: \"row\",\n      padding: cell.disablePadding ? \"none\" : \"default\",\n      align: cell.numeric ? \"right\" : \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, row[cell.id]));\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: data.length,\n    checkbox: true,\n    cellConfigs: cellConfigs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), data.length == 0 ? null : __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, stableSort(data, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row._id);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row._id,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, renderCheckbox(isItemSelected, row._id), renderCell(row));\n  }), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, __jsx(TableCell, {\n    colSpan: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }))))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nexport default DataTable;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/DataTable/DataTable.js"],"names":["makeStyles","Table","TableBody","TableCell","TableContainer","TablePagination","TableRow","Checkbox","Paper","EnhancedTableHead","EnhancedTableToolbar","useStyles","theme","root","width","paddingTop","spacing","paper","marginBottom","table","minWidth","DataTable","data","orderByDefault","cellConfigs","checkbox","classes","order","setOrder","React","useState","orderBy","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","event","property","isAsc","handleSelectAllClick","target","checked","newSelecteds","map","_id","id","handleCheck","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","emptyRows","Math","min","renderCheckbox","isItemSelected","renderCell","row","cell","disablePadding","numeric","stableSort","getComparator","index","labelId","height","descendingComparator","a","b","array","comparator","stabilizedThis","el","sort"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Checkbox,\n  Paper,\n} from \"@material-ui/core\";\n\nimport EnhancedTableHead from \"./EnhancedTableHeader\";\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    paddingTop: theme.spacing(2),\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n}));\n\nfunction DataTable({ data = [], orderByDefault, cellConfigs, checkbox }) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(orderByDefault?.order || \"asc\");\n  const [orderBy, setOrderBy] = React.useState(orderByDefault?.orderBy || \"title\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      // Get id foreach row and selected\n      const newSelecteds = data.map(({ _id: id }) => id);\n\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleCheck = (event, id) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (id) => selected.indexOf(id) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  const renderCheckbox = (isItemSelected, id) => {\n    if (checkbox) {\n      return (\n        <TableCell padding=\"checkbox\">\n          <Checkbox checked={isItemSelected} onChange={(event) => handleCheck(event, id)} />\n        </TableCell>\n      );\n    }\n  };\n\n  const renderCell = (row) => {\n    return cellConfigs.map((cell) => (\n      <TableCell\n        key={row[cell.id]}\n        component=\"th\"\n        scope=\"row\"\n        padding={cell.disablePadding ? \"none\" : \"default\"}\n        align={cell.numeric ? \"right\" : \"left\"}\n      >\n        {row[cell.id]}\n      </TableCell>\n    ));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\" aria-label=\"enhanced table\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={data.length}\n              checkbox\n              cellConfigs={cellConfigs}\n            />\n            {data.length == 0 ? null : (\n              <TableBody>\n                {stableSort(data, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const isItemSelected = isSelected(row._id);\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        aria-checked={isItemSelected}\n                        tabIndex={-1}\n                        key={row._id}\n                        selected={isItemSelected}\n                      >\n                        {renderCheckbox(isItemSelected, row._id)}\n                        {renderCell(row)}\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow style={{ height: 53 * emptyRows }}>\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}