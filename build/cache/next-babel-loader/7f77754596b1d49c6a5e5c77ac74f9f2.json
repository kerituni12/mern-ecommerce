{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/Sidebar.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider, List } from \"@material-ui/core\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { appMenuItems } from \"./configSidebar\";\nimport NavItems from \"./NavItems\";\nconst useStyles = makeStyles(theme => ({\n  toolbar: _objectSpread({\n    display: \"flex\",\n    position: \"sticky\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, theme.mixins.toolbar),\n  logoText: {\n    margin: 0\n  }\n}));\n\nfunction SideBar({\n  isToggle\n}) {\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, isToggle ? __jsx(\"h1\", {\n    className: classes.logoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Logo \") : __jsx(\"h1\", {\n    className: classes.logoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 67\n    }\n  }, \"LG\")), __jsx(PerfectScrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, appMenuItems.map((item, index) => __jsx(NavItems, _extends({}, item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default SideBar;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/Sidebar.js"],"names":["React","makeStyles","Divider","List","PerfectScrollbar","appMenuItems","NavItems","useStyles","theme","toolbar","display","position","alignItems","justifyContent","mixins","logoText","margin","SideBar","isToggle","classes","suppressScrollX","map","item","index"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,mBAA9B;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,OAAO;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,QAAQ,EAAE,QAFL;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,cAAc,EAAE;AAJX,KAMFL,KAAK,CAACM,MAAN,CAAaL,OANX,CADgC;AASvCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA;AAT6B,CAAZ,CAAD,CAA5B;;AAcA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA+B;AAC7B,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,SACE,4BACE;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACV,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,QAAQ,GAAG;AAAI,IAAA,SAAS,EAAEC,OAAO,CAACJ,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,GAAiD;AAAI,IAAA,SAAS,EAAEI,OAAO,CAACJ,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD5D,CADF,EAIE,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAEK,MAAAA,eAAe,EAAE;AAAnB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,YAAY,CAACgB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAChB,MAAC,QAAD,eAAcD,IAAd;AAAoB,IAAA,GAAG,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADH,CAFF,CAJF,CADF;AAuBD;;AACD,eAAeN,OAAf","sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider, List } from \"@material-ui/core\";\n\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { appMenuItems } from \"./configSidebar\";\nimport NavItems from \"./NavItems\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: \"flex\",\n    position: \"sticky\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  logoText: {\n    margin: 0,\n  },\n}));\n\nfunction SideBar({ isToggle }) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.toolbar}>\n        {isToggle ? <h1 className={classes.logoText}>Logo </h1> : <h1 className={classes.logoText}>LG</h1>}\n      </div>\n      <PerfectScrollbar options={{ suppressScrollX: true }}>\n        <Divider />\n        <List>\n          {appMenuItems.map((item, index) => (\n            <NavItems {...item} key={index} />\n          ))}\n          {/* <Link href=\"/\">\n            <ListItem button>\n              <ListItemIcon>\n                <MailIcon />\n              </ListItemIcon>\n              <ListItemText>Hello</ListItemText>\n            </ListItem>\n          </Link> */}\n        </List>\n      </PerfectScrollbar>\n    </>\n  );\n}\nexport default SideBar;\n"]},"metadata":{},"sourceType":"module"}