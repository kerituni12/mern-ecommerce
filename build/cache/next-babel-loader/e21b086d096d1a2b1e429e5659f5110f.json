{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport { appMenuItems } from \"configs/sidebar\";\nimport NavItems from \"./NavItems\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\nconst useStyles = makeStyles(theme => ({\n  toolbar: _objectSpread({\n    display: \"flex\",\n    position: \"sticky\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, theme.mixins.toolbar),\n  logoText: {\n    margin: 0\n  }\n}));\n\nfunction SideBar({\n  isToggle\n}) {\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.toolbar\n  }, isToggle ? __jsx(\"h1\", {\n    className: classes.logoText\n  }, \"Logo \") : __jsx(\"h1\", {\n    className: classes.logoText\n  }, \"LG\")), __jsx(PerfectScrollbar, {\n    options: {\n      suppressScrollX: true\n    }\n  }, __jsx(Divider, null), __jsx(List, null, appMenuItems.map((item, index) => __jsx(NavItems, _extends({}, item, {\n    key: index\n  }))))));\n}\n\nexport default SideBar;","map":null,"metadata":{},"sourceType":"module"}