{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableContainer, TablePagination, TableRow, Checkbox, Paper } from \"@material-ui/core\";\nimport EnhancedTableHead from \"./EnhancedTableHeader\";\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      paddingTop: theme.spacing(2)\n    },\n    paper: {\n      width: \"100%\",\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    }\n  };\n});\n\nfunction DataTable(_ref) {\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data,\n      orderByDefault = _ref.orderByDefault,\n      cellConfigs = _ref.cellConfigs,\n      checkbox = _ref.checkbox;\n  var classes = useStyles();\n\n  var _React$useState = React.useState((orderByDefault === null || orderByDefault === void 0 ? void 0 : orderByDefault.order) || \"asc\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      order = _React$useState2[0],\n      setOrder = _React$useState2[1];\n\n  var _React$useState3 = React.useState((orderByDefault === null || orderByDefault === void 0 ? void 0 : orderByDefault.orderBy) || \"title\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      orderBy = _React$useState4[0],\n      setOrderBy = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selected = _React$useState6[0],\n      setSelected = _React$useState6[1];\n\n  var _React$useState7 = React.useState(0),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      page = _React$useState8[0],\n      setPage = _React$useState8[1];\n\n  var _React$useState9 = React.useState(10),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      rowsPerPage = _React$useState10[0],\n      setRowsPerPage = _React$useState10[1];\n\n  var handleRequestSort = function handleRequestSort(event, property) {\n    var isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  var handleSelectAllClick = function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      // Get id foreach row and selected\n      var newSelecteds = data.map(function (_ref2) {\n        var id = _ref2._id;\n        return id;\n      });\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  var handleCheck = function handleCheck(event, id) {\n    var selectedIndex = selected.indexOf(id);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  var isSelected = function isSelected(id) {\n    return selected.indexOf(id) !== -1;\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  var renderCheckbox = function renderCheckbox(isItemSelected, id) {\n    if (checkbox) {\n      return __jsx(TableCell, {\n        padding: \"checkbox\"\n      }, __jsx(Checkbox, {\n        checked: isItemSelected,\n        onChange: function onChange(event) {\n          return handleCheck(event, id);\n        }\n      }));\n    }\n  };\n\n  var renderCell = function renderCell(row) {\n    return cellConfigs.map(function (cell) {\n      return __jsx(TableCell, {\n        key: row[cell.id],\n        component: \"th\",\n        scope: \"row\",\n        padding: cell.disablePadding ? \"none\" : \"default\",\n        align: cell.numeric ? \"right\" : \"left\"\n      }, row[cell.id]);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(EnhancedTableToolbar, {\n    numSelected: selected.length\n  }), __jsx(TableContainer, null, __jsx(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    \"aria-label\": \"enhanced table\"\n  }, __jsx(EnhancedTableHead, {\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: data.length,\n    checkbox: true,\n    cellConfigs: cellConfigs\n  }), data.length == 0 ? null : __jsx(TableBody, null, stableSort(data, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    var isItemSelected = isSelected(row._id);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row._id,\n      selected: isItemSelected\n    }, renderCheckbox(isItemSelected, row._id), renderCell(row));\n  }), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: 53 * emptyRows\n    }\n  }, __jsx(TableCell, {\n    colSpan: 6\n  }))))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: data.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  })));\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return descendingComparator(a, b, orderBy);\n  } : function (a, b) {\n    return -descendingComparator(a, b, orderBy);\n  };\n}\n\nfunction stableSort(array, comparator) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nexport default DataTable;","map":null,"metadata":{},"sourceType":"module"}