{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/DrawSidebar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Drawer } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    width: drawerClose,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nfunction DrawSidebar({\n  smallScreen,\n  toggle,\n  handleDrawerToggle,\n  children\n}) {\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, smallScreen ? __jsx(Drawer, {\n    variant: \"temporary\",\n    open: toggle,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better toggle performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, children) : __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx({\n      [classes.drawerOpen]: toggle,\n      [classes.drawerClose]: !toggle\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: toggle,\n        [classes.drawerClose]: !toggle\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, children));\n}\n\nexport default DrawSidebar;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/DrawSidebar.js"],"names":["Drawer","clsx","makeStyles","useStyles","theme","drawerOpen","width","drawerWidth","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","content","flexGrow","padding","spacing","drawerPaper","DrawSidebar","smallScreen","toggle","handleDrawerToggle","children","classes","paper","keepMounted"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEC,WADG;AAEVC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,KAAlC;AAFF,GAD2B;AAQvCC,EAAAA,WAAW,EAAE;AACXT,IAAAA,KAAK,EAAES,WADI;AAEXP,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BG;AAFO,KAAlC;AAFD,GAR0B;AAevCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,CADH;AAEPC,IAAAA,OAAO,EAAEf,KAAK,CAACgB,OAAN,CAAc,CAAd;AAFF,GAf8B;AAmBvCC,EAAAA,WAAW,EAAE;AACXf,IAAAA,KAAK,EAAEC;AADI;AAnB0B,CAAZ,CAAD,CAA5B;;AAwBA,SAASe,WAAT,CAAqB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA,kBAAvB;AAA2CC,EAAAA;AAA3C,CAArB,EAA4E;AAC1E,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;AACA,SACE,4BACGoB,WAAW,GACV,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,IAAI,EAAEC,MAFR;AAGE,IAAA,OAAO,EAAEC,kBAHX;AAIE,IAAA,OAAO,EAAE;AACPG,MAAAA,KAAK,EAAED,OAAO,CAACN;AADR,KAJX;AAOE,IAAA,UAAU,EAAE;AACVQ,MAAAA,WAAW,EAAE,IADH,CACS;;AADT,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGH,QAXH,CADU,GAeV,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,SAAS,EAAEzB,IAAI,CAAC;AACd,OAAC0B,OAAO,CAACtB,UAAT,GAAsBmB,MADR;AAEd,OAACG,OAAO,CAACZ,WAAT,GAAuB,CAACS;AAFV,KAAD,CAFjB;AAME,IAAA,OAAO,EAAE;AACPI,MAAAA,KAAK,EAAE3B,IAAI,CAAC;AACV,SAAC0B,OAAO,CAACtB,UAAT,GAAsBmB,MADZ;AAEV,SAACG,OAAO,CAACZ,WAAT,GAAuB,CAACS;AAFd,OAAD;AADJ,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGE,QAbH,CAhBJ,CADF;AAmCD;;AAED,eAAeJ,WAAf","sourcesContent":["import { Drawer } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    width: drawerClose,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nfunction DrawSidebar({ smallScreen, toggle, handleDrawerToggle, children }) {\n  const classes = useStyles();\n  return (\n    <>\n      {smallScreen ? (\n        <Drawer\n          variant=\"temporary\"\n          open={toggle}\n          onClose={handleDrawerToggle}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true, // Better toggle performance on mobile.\n          }}\n        >\n          {children}\n        </Drawer>\n      ) : (\n        <Drawer\n          variant=\"permanent\"\n          className={clsx({\n            [classes.drawerOpen]: toggle,\n            [classes.drawerClose]: !toggle,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: toggle,\n              [classes.drawerClose]: !toggle,\n            }),\n          }}\n        >\n          {children}\n        </Drawer>\n      )}\n    </>\n  );\n}\n\nexport default DrawSidebar;\n"]},"metadata":{},"sourceType":"module"}