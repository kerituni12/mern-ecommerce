{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\"; // import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport NavItem from \"./NavItem\";\nimport { Box, ListItem } from \"@material-ui/core\"; // React runtime PropTypes\n\nexport const AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array\n};\n\nconst AppMenuItem = props => {\n  const {\n    name,\n    link,\n    Icon,\n    items = []\n  } = props;\n  const classes = useStyles();\n  const isExpandable = items && items.length > 0;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  const MenuItemRoot = __jsx(NavItem, {\n    className: classes.menuItem,\n    link: link,\n    onClick: handleClick\n  }, __jsx(ListItem, null, !!Icon && __jsx(ListItemIcon, {\n    className: classes.menuItemIcon\n  }, __jsx(Icon, null)), __jsx(ListItemText, {\n    primary: name,\n    inset: !Icon\n  }), isExpandable && !open && __jsx(IconExpandMore, null), isExpandable && open && __jsx(IconExpandLess, null)));\n\n  const MenuItemChildren = isExpandable ? __jsx(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(Divider, null), __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, items.map((item, index) => __jsx(AppMenuItem, _extends({}, item, {\n    key: index\n  }))))) : null;\n  return __jsx(React.Fragment, null, MenuItemRoot, MenuItemChildren);\n};\n\nconst useStyles = makeStyles(theme => createStyles({\n  menuItem: {\n    \"&.active\": {\n      background: \"rgba(0, 0, 0, 0.08)\",\n      \"& .MuiListItemIcon-root\": {\n        color: \"#fff\"\n      }\n    }\n  },\n  menuItemIcon: {\n    color: \"#97c05c\"\n  }\n}));\nexport default AppMenuItem;","map":null,"metadata":{},"sourceType":"module"}