{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/contexts/Auth.context.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, memo } from \"react\";\nimport Router, { useRouter } from \"next/router\";\nimport api from \"services/axios\";\nconst AuthContext = /*#__PURE__*/React.createContext({});\n\nfunction AuthProvider({\n  children\n}) {\n  console.log(\"authprovider chay\");\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    console.log(\"useEffect chay\");\n\n    async function loadUserFromCookies() {\n      const user = localStorage.getItem(\"userInfo\");\n      if (user) setUser(JSON.parse(user)); //Use can check user by request to server with autocookie send in request\n\n      setLoading(false);\n    }\n\n    loadUserFromCookies();\n    return () => console.log(\"re-mount auth contexnt\");\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await api.post(\"api/auth/login\", {\n        email,\n        password\n      });\n\n      if (user) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\n        await setUser(user);\n        await Router.push(\"/admin\");\n      }\n    } catch (err) {\n      return console.error(err.response);\n    }\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(\"userInfo\");\n    await api.post(\"auth/logout\");\n    setUser(null);\n    await Router.push(\"/login\");\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      loading,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  useContext(AuthContext);\n}\n\nfunction ProtectRoute({\n  children,\n  ctx\n}) {\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n  console.log(Date.now());\n  const router = useRouter();\n\n  if (!isAuthenticated) {\n    // if(!loading) router.push(\"/login\");\n    // return <h1>Loading</h1>\n    console.log(false);\n\n    if (false && typeof window.document !== \"undefined\") {\n      Router.push(\"/login\");\n    }\n\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }\n    }, \"Loading\");\n  }\n\n  return children;\n}\n\nProtectRoute.getInitialProps = ctx => {\n  // We check for ctx.res to make sure we're on the server.\n  if (ctx.res) {\n    ctx.res.writeHead(302, {\n      Location: \"/new/url\"\n    });\n    ctx.res.end();\n  }\n\n  return {};\n};\n\nexport { AuthContext, AuthProvider, useAuth, ProtectRoute };","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/contexts/Auth.context.js"],"names":["React","useState","useContext","useEffect","memo","Router","useRouter","api","AuthContext","createContext","AuthProvider","children","console","log","user","setUser","loading","setLoading","loadUserFromCookies","localStorage","getItem","JSON","parse","login","email","password","data","post","setItem","stringify","push","err","error","response","logout","removeItem","isAuthenticated","useAuth","ProtectRoute","ctx","Date","now","router","window","document","getInitialProps","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, memo } from \"react\";\nimport Router, { useRouter } from \"next/router\";\n\nimport api from \"services/axios\";\n\nconst AuthContext = React.createContext({});\n\nfunction AuthProvider({ children }) {\n  console.log(\"authprovider chay\");\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(\"useEffect chay\");\n    async function loadUserFromCookies() {\n      const user = localStorage.getItem(\"userInfo\");\n      if (user) setUser(JSON.parse(user));\n      //Use can check user by request to server with autocookie send in request\n\n      setLoading(false);\n    }\n    loadUserFromCookies();\n    return () => console.log(\"re-mount auth contexnt\");\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const {\n        data: { user },\n      } = await api.post(\"api/auth/login\", { email, password });\n      if (user) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\n        await setUser(user);\n        await Router.push(\"/admin\");\n      }\n    } catch (err) {\n      return console.error(err.response);\n    }\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(\"userInfo\");\n    await api.post(\"auth/logout\");\n    setUser(null);\n    await Router.push(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated: !!user, user, login, loading, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  useContext(AuthContext);\n}\n\nfunction ProtectRoute({ children, ctx }) {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  console.log(Date.now());\n  const router = useRouter();\n  if (!isAuthenticated) {\n    // if(!loading) router.push(\"/login\");\n    // return <h1>Loading</h1>\n    console.log(typeof window != \"undefined\")\n    if (typeof window !== \"undefined\" && typeof window.document !== \"undefined\") {    \n     \n      Router.push(\"/login\");\n     \n    }\n    return <h1>Loading</h1>;\n  }\n\n  return children;\n}\n\nProtectRoute.getInitialProps = (ctx) => {\n  // We check for ctx.res to make sure we're on the server.\n  if (ctx.res) {\n    ctx.res.writeHead(302, { Location: \"/new/url\" });\n    ctx.res.end();\n  }\n  return {};\n};\n\nexport { AuthContext, AuthProvider, useAuth, ProtectRoute };\n"]},"metadata":{},"sourceType":"module"}