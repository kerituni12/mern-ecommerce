{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { Button, AppBar, Tab, Tabs, Box, Typography, Toolbar, FormControl, InputLabel, OutlinedInput, InputAdornment } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\nvar currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}];\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1,\n      boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\"\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    },\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    textField: {\n      marginBottom: theme.spacing(1.5)\n    },\n    dense: {\n      marginTop: theme.spacing(2)\n    },\n    menu: {\n      width: 200\n    },\n    button: {\n      margin: theme.spacing(1)\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1)\n    }\n  });\n});\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-auto-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-auto-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-auto-tab-\".concat(index),\n    \"aria-controls\": \"scrollable-auto-tabpanel-\".concat(index)\n  };\n}\n\nexport default function Login() {\n  var classes = useStyles();\n  var loginSchema = yup.object().shape({\n    title: yup.string().required(),\n    price: yup.number().required()\n  });\n\n  var _useForm = useForm({\n    validationSchema: loginSchema\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var onSubmit = function onSubmit(values) {\n    var title = values.title,\n        slug = values.slug,\n        description = values.description,\n        category = values.category,\n        price = values.price;\n    console.log(values); // ${process.env.REACT_APP_API_BASE}/api/v1/users/login/\n\n    fetch(\"http://localhost:3001/api/product\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      // mode: 'cors',\n      body: JSON.stringify({\n        title: title,\n        slug: slug,\n        description: description,\n        category: category,\n        price: price\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(\"Success:\", data);\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    position: \"static\",\n    color: \"default\"\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"scrollable\",\n    scrollButtons: \"auto\",\n    \"aria-label\": \"scrollable auto tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"Item One\"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"Item Two\"\n  }, a11yProps(1))))), __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.container\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(TextField, {\n    name: \"title\",\n    inputRef: register,\n    label: \"Title\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: errors.email ? true : false\n  }), __jsx(TextField, {\n    name: \"slug\",\n    inputRef: register,\n    label: \"Slug\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: errors.email ? true : false\n  }), __jsx(TextField, {\n    name: \"description\",\n    inputRef: register,\n    label: \"Description\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: errors.email ? true : false\n  }), __jsx(Controller, {\n    as: __jsx(TextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      label: \"Category\" // value={currency}\n      //   onChange={handleChange}\n      ,\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true\n    }, currencies.map(function (option) {\n      return __jsx(MenuItem, {\n        key: option.value,\n        value: option.value\n      }, option.label);\n    })),\n    name: \"category\",\n    rules: {\n      required: \"this is required\"\n    },\n    control: control,\n    defaultValue: \"\"\n  }), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.dense,\n    variant: \"outlined\",\n    margin: \"normal\"\n  }, __jsx(InputLabel, {\n    htmlFor: \"outlined-adornment-amount\"\n  }, \"Amount\"), __jsx(OutlinedInput, {\n    id: \"outlined-adornment-amount\",\n    name: \"price\",\n    inputRef: register // value={values.amount}\n    //   onChange={handleChange(\"amount\")}\n    ,\n    startAdornment: __jsx(InputAdornment, {\n      position: \"start\"\n    }, \"$\"),\n    labelWidth: 60\n  }))), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }, __jsx(TextField, {\n    name: \"email\",\n    inputRef: register,\n    label: \"Enter email\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: errors.email ? true : false\n  }), __jsx(TextField, {\n    name: \"password\",\n    type: \"password\",\n    inputRef: register,\n    label: \"Enter password\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: errors.email ? true : false\n  })), __jsx(TabPanel, {\n    value: value,\n    index: 2\n  }, \"Item Three\"), __jsx(TabPanel, {\n    value: value,\n    index: 3\n  }, \"Item Four\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    className: classes.button,\n    type: \"submit\",\n    variant: \"outlined\",\n    \"aria-label\": \"delete\",\n    color: \"primary\"\n  }, \"Continue\")))));\n}","map":null,"metadata":{},"sourceType":"module"}