{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport { Dashboard } from \"@material-ui/icons\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    width: drawerClose,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  },\n  drawerPaper: {\n    width: drawerWidth\n  }\n}));\n\nfunction DashBoardHOC(Component, pageProps) {\n  return function DashBoard(props) {\n    const classes = useStyles();\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n\n      window.addEventListener(\"resize\", updateSize); // updateSize()\n\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return __jsx(\"div\", {\n      className: classes.root\n    }, __jsx(CssBaseline, null), smallScreen ? __jsx(Drawer, {\n      variant: \"temporary\",\n      open: toggle,\n      onClose: handleDrawerToggle,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      ModalProps: {\n        keepMounted: true // Better toggle performance on mobile.\n\n      }\n    }, __jsx(SideBar, {\n      toggle: toggle\n    })) : __jsx(Drawer, {\n      variant: \"permanent\",\n      className: clsx({\n        [classes.drawerOpen]: toggle,\n        [classes.drawerClose]: !toggle\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: toggle,\n          [classes.drawerClose]: !toggle\n        })\n      }\n    }, __jsx(SideBar, {\n      toggle: toggle\n    })), __jsx(\"div\", {\n      className: classes.appContent\n    }, __jsx(Header, {\n      toggle: toggle,\n      handleToggle: handleDrawerToggle\n    }), __jsx(\"main\", {\n      className: classes.content\n    }, __jsx(\"div\", {\n      className: classes.toolbar\n    }), __jsx(Component, props))));\n  };\n}\n\nexport default DashBoardHOC;","map":null,"metadata":{},"sourceType":"module"}