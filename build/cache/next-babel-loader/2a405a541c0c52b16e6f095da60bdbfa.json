{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/pages/admin/categories/[category].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { useRouter } from \"next/router\";\nconst currencies = [{\n  value: \"USD\",\n  label: \"$\"\n}, {\n  value: \"EUR\",\n  label: \"€\"\n}, {\n  value: \"BTC\",\n  label: \"฿\"\n}, {\n  value: \"JPY\",\n  label: \"¥\"\n}];\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1,\n    boxShadow: \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginBottom: theme.spacing(1.5)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\nexport default function CategoryCreate() {\n  const classes = useStyles();\n  let categorySchema = yup.object().shape({\n    title: yup.string().required(),\n    slug: yup.string().required()\n  });\n  const {\n    control,\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    validationSchema: categorySchema\n  });\n  const router = useRouter();\n  const {\n    category\n  } = router.query;\n  React.useEffect(() => {\n    // if first router = undefined will have error controlled input\n    if (category !== undefined) {\n      fetch(`http://localhost:3001/api/category/${category}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(({\n        data\n      }) => {\n        if (data) {\n          setValue(\"title\", data.title);\n          setValue(\"slug\", data.description);\n        }\n      }).catch(error => {\n        console.error(\"Error:\", error);\n      });\n    }\n\n    return () => {\n      console.log(\"cleaner\");\n    };\n  }, [category]);\n\n  const onSubmit = values => {\n    console.log(values);\n    const {\n      title,\n      slug,\n      description\n    } = values; // ${process.env.REACT_APP_API_BASE}/api/v1/users/login/\n\n    fetch(\"http://localhost:3001/api/category\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      // mode: \"cors\",\n      body: JSON.stringify({\n        title: title,\n        slug: slug,\n        description: description\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, __jsx(Controller, {\n    as: __jsx(TextField, {\n      label: \"Category\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }),\n    name: \"title\",\n    control: control,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(Controller, {\n    as: __jsx(TextField, {\n      label: \"Slug\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }),\n    name: \"slug\",\n    control: control,\n    defaultValue: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    name: \"description\",\n    inputRef: register,\n    label: \"Description\",\n    defaultValue: \"description\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: classes.button,\n    type: \"submit\",\n    variant: \"outlined\",\n    \"aria-label\": \"delete\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Save\")))));\n}","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/pages/admin/categories/[category].js"],"names":["React","makeStyles","createStyles","Theme","Grid","TextField","Button","Box","Typography","useForm","Controller","yup","useRouter","currencies","value","label","useStyles","theme","root","flexGrow","boxShadow","paper","padding","spacing","textAlign","color","palette","text","secondary","container","display","flexWrap","textField","marginBottom","dense","marginTop","menu","width","button","margin","extendedIcon","marginRight","CategoryCreate","classes","categorySchema","object","shape","title","string","required","slug","control","register","handleSubmit","errors","validationSchema","router","category","query","useEffect","undefined","fetch","method","headers","then","response","json","data","setValue","description","catch","error","console","log","onSubmit","values","body","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { Button, Box, Typography } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as yup from \"yup\";\n\nimport { useRouter } from \"next/router\";\nconst currencies = [\n  {\n    value: \"USD\",\n    label: \"$\",\n  },\n  {\n    value: \"EUR\",\n    label: \"€\",\n  },\n  {\n    value: \"BTC\",\n    label: \"฿\",\n  },\n  {\n    value: \"JPY\",\n    label: \"¥\",\n  },\n];\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      boxShadow:\n        \"0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    textField: {\n      marginBottom: theme.spacing(1.5),\n    },\n    dense: {\n      marginTop: theme.spacing(2),\n    },\n    menu: {\n      width: 200,\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n  })\n);\n\nexport default function CategoryCreate() {\n  const classes = useStyles();\n\n  let categorySchema = yup.object().shape({\n    title: yup.string().required(),\n    slug: yup.string().required(),\n  });\n\n  const { control, register, handleSubmit, errors } = useForm({\n    validationSchema: categorySchema,    \n  });\n  const router = useRouter();\n  const { category } = router.query;\n\n  React.useEffect(() => {\n    // if first router = undefined will have error controlled input\n    if (category !== undefined) {\n      fetch(`http://localhost:3001/api/category/${category}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => response.json())\n        .then(({ data }) => {    \n         if(data){  \n          setValue(\"title\", data.title);\n          setValue(\"slug\", data.description);}\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n    }\n    return () => {\n      console.log(\"cleaner\");\n    };\n  }, [category]);\n\n  const onSubmit = (values) => {\n    console.log(values);\n    const { title, slug, description } = values;\n\n    // ${process.env.REACT_APP_API_BASE}/api/v1/users/login/\n    fetch(\"http://localhost:3001/api/category\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      // mode: \"cors\",\n      body: JSON.stringify({ title: title, slug: slug, description: description }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={handleSubmit(onSubmit)} className={classes.container}>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <Controller\n              as={\n                <TextField\n                  label=\"Category\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              }\n              name=\"title\"\n              control={control}\n              defaultValue=\"\"\n            />\n\n            <Controller\n              as={<TextField label=\"Slug\" margin=\"normal\" variant=\"outlined\" fullWidth />}\n              name=\"slug\"\n              control={control}\n              defaultValue=\"\"\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              name=\"description\"\n              inputRef={register}\n              label=\"Description\"\n              defaultValue=\"description\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth\n              multiline\n            />\n          </Grid>\n          <Grid item>\n            <Button\n              className={classes.button}\n              type=\"submit\"\n              variant=\"outlined\"\n              aria-label=\"delete\"\n              color=\"primary\"\n            >\n              Save\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}