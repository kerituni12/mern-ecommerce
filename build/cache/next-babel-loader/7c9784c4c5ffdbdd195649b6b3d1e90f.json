{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  }\n}));\n\nconst DashBoardHOC = Component => {\n  function DashBoard({\n    children\n  }) {\n    console.log(\"dashboard re-render\");\n    const classes = useStyles();\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n    const [date, setDate] = React.useState(Date.now());\n    console.log(date, Date.now());\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n\n      window.addEventListener(\"resize\", updateSize); // updateSize()\n\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), __jsx(DrawSidebar, {\n      toggle: toggle,\n      smallScreen: smallScreen,\n      handleDrawerToggle: handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: classes.appContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      toggle: toggle,\n      handleToggle: handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), children)));\n  }\n};\n\nfunction HOC(Component) {\n  return function DashBoard(props) {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Hello\"), __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    })));\n  };\n} // export default React.memo(DashBoard);\n\n\nexport default DashBoardHOC;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js"],"names":["React","Component","clsx","makeStyles","Drawer","CssBaseline","useIsomorphicLayoutEffect","SideBar","Header","Link","DrawSidebar","useStyles","theme","root","display","appContent","flex","flexDirection","content","flexGrow","padding","spacing","DashBoardHOC","DashBoard","children","console","log","classes","toggle","setToggle","useState","smallScreen","setSmallScreen","date","setDate","Date","now","handleDrawerToggle","updateSize","window","innerWidth","addEventListener","removeEventListener","toolbar","HOC","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,mBAApC;AACA,OAAOC,yBAAP,MAAsC,uBAAtC;AAEA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,UAAU,EAAE;AACVD,IAAAA,OAAO,EAAE,MADC;AAEVE,IAAAA,IAAI,EAAE,QAFI;AAGVC,IAAAA,aAAa,EAAE;AAHL,GAJ2B;AASvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,CADH;AAEPC,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AAFF;AAT8B,CAAZ,CAAD,CAA5B;;AAcA,MAAMC,YAAY,GAAIrB,SAAD,IAAe;AAClC,WAASsB,SAAT,CAAmB;AAAEC,IAAAA;AAAF,GAAnB,EAAiC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,OAAO,GAAGhB,SAAS,EAAzB;AAEA,UAAM,CAACiB,MAAD,EAASC,SAAT,IAAsB7B,KAAK,CAAC8B,QAAN,CAAe,IAAf,CAA5B;AACA,UAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,KAAK,CAAC8B,QAAN,CAAe,QAAQ,GAAvB,CAAtC;AACA,UAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBlC,KAAK,CAAC8B,QAAN,CAAeK,IAAI,CAACC,GAAL,EAAf,CAAxB;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ,EAAkBE,IAAI,CAACC,GAAL,EAAlB;;AAEA,UAAMC,kBAAkB,GAAG,MAAM;AAC/BR,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,KAFD;;AAIAtB,IAAAA,yBAAyB,CAAC,MAAM;AAC9B,eAASgC,UAAT,GAAsB;AACpBC,QAAAA,MAAM,CAACC,UAAP,IAAqB,GAArB,GAA2BR,cAAc,CAAC,IAAD,CAAzC,GAAkDA,cAAc,CAAC,KAAD,CAAhE;AACD;;AACDO,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,UAAlC,EAJ8B,CAK9B;;AACA,aAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,UAArC,CAAb;AACD,KAPwB,EAOtB,EAPsB,CAAzB;AASA,WACE;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACd,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,MAAC,WAAD;AAAa,MAAA,MAAM,EAAEe,MAArB;AAA6B,MAAA,WAAW,EAAEG,WAA1C;AAAuD,MAAA,kBAAkB,EAAEM,kBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACZ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEa,MAAhB;AAAwB,MAAA,YAAY,EAAES,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAM,MAAA,SAAS,EAAEV,OAAO,CAACT,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAES,OAAO,CAACgB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGnB,QAFH,CAFF,CALF,CADF;AAeD;AACF,CAvCD;;AAyCA,SAASoB,GAAT,CAAa3C,SAAb,EAAwB;AACtB,SAAO,SAASsB,SAAT,CAAmBsB,KAAnB,EAA0B;AAC/B,WACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,MAAC,SAAD,eAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF;AAMD,GAPD;AAQD,C,CACD;;;AAEA,eAAevB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\n\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n}));\nconst DashBoardHOC = (Component) => {\n  function DashBoard({ children }) {\n    console.log(\"dashboard re-render\");\n    const classes = useStyles();\n\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n    const [date, setDate] = React.useState(Date.now());\n    console.log(date, Date.now());\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n      window.addEventListener(\"resize\", updateSize);\n      // updateSize()\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <DrawSidebar toggle={toggle} smallScreen={smallScreen} handleDrawerToggle={handleDrawerToggle}></DrawSidebar>\n\n        <div className={classes.appContent}>\n          <Header toggle={toggle} handleToggle={handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            {children}\n          </main>\n        </div>\n      </div>\n    );\n  }\n};\n\nfunction HOC(Component) {\n  return function DashBoard(props) {\n    return (\n      <>\n        <h1>Hello</h1>\n        <Component {...props} />\n      </>\n    );\n  };\n}\n// export default React.memo(DashBoard);\n\nexport default DashBoardHOC;\n"]},"metadata":{},"sourceType":"module"}