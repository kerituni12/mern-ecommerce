{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\"; // import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport NavItem from \"./NavItem\";\nimport { Box, ListItem } from \"@material-ui/core\"; // React runtime PropTypes\n\nexport var AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array\n};\n\nvar AppMenuItem = function AppMenuItem(props) {\n  var name = props.name,\n      link = props.link,\n      Icon = props.Icon,\n      _props$items = props.items,\n      items = _props$items === void 0 ? [] : _props$items;\n  var classes = useStyles();\n  var isExpandable = items && items.length > 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  var MenuItemRoot = __jsx(NavItem, {\n    className: classes.menuItem,\n    link: link,\n    onClick: handleClick\n  }, __jsx(ListItem, null, !!Icon && __jsx(ListItemIcon, {\n    className: classes.menuItemIcon\n  }, __jsx(Icon, null)), __jsx(ListItemText, {\n    primary: name,\n    inset: !Icon\n  }), isExpandable && !open && __jsx(IconExpandMore, null), isExpandable && open && __jsx(IconExpandLess, null)));\n\n  var MenuItemChildren = isExpandable ? __jsx(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(Divider, null), __jsx(List, {\n    component: \"div\",\n    disablePadding: true\n  }, items.map(function (item, index) {\n    return __jsx(AppMenuItem, _extends({}, item, {\n      key: index\n    }));\n  }))) : null;\n  return __jsx(React.Fragment, null, MenuItemRoot, MenuItemChildren);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    menuItem: {\n      \"&.active\": {\n        background: \"rgba(0, 0, 0, 0.08)\",\n        \"& .MuiListItemIcon-root\": {\n          color: \"#fff\"\n        }\n      }\n    },\n    menuItemIcon: {\n      color: \"#97c05c\"\n    }\n  });\n});\nexport default AppMenuItem;","map":null,"metadata":{},"sourceType":"module"}