{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/NavItems.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\"; // import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\"; // import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n\nimport { Divider, Collapse, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport NavItem from \"./NavItem\"; // React runtime PropTypes\n\nexport const AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array\n};\nconst useStyles = makeStyles(theme => createStyles({\n  menuItem: {\n    \"&.active\": {\n      background: \"rgba(0, 0, 0, 0.08)\",\n      \"& .MuiListItemIcon-root\": {\n        color: \"#fff\"\n      }\n    }\n  },\n  menuItemIcon: {\n    color: \"#97c05c\"\n  }\n}));\n\nconst AppMenuItem = props => {\n  const {\n    name,\n    link,\n    Icon,\n    items = []\n  } = props;\n  const classes = useStyles();\n  const isExpandable = items && items.length > 0;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  const MenuItemRoot = __jsx(NavItem, {\n    className: classes.menuItem,\n    link: link,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, !!Icon && __jsx(ListItemIcon, {\n    className: classes.menuItemIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), __jsx(ListItemText, {\n    primary: name,\n    inset: !Icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), isExpandable && !open && __jsx(IconExpandMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 35\n    }\n  }), isExpandable && open && __jsx(IconExpandLess, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 34\n    }\n  })));\n\n  const MenuItemChildren = isExpandable ? __jsx(Collapse, {\n    in: open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, items.map((item, index) => __jsx(AppMenuItem, _extends({}, item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))))) : null;\n  return __jsx(React.Fragment, null, MenuItemRoot, MenuItemChildren);\n};\n\nexport default AppMenuItem;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/NavItems.js"],"names":["React","PropTypes","makeStyles","createStyles","List","Divider","Collapse","ListItem","ListItemIcon","ListItemText","IconExpandLess","IconExpandMore","NavItem","AppMenuItemPropTypes","name","string","isRequired","link","Icon","elementType","items","array","useStyles","theme","menuItem","background","color","menuItemIcon","AppMenuItem","props","classes","isExpandable","length","open","setOpen","useState","handleClick","MenuItemRoot","MenuItemChildren","map","item","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n// import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\";\n\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\nimport {Divider, Collapse, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\n\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\n\nimport NavItem from \"./NavItem\";\n\n// React runtime PropTypes\nexport const AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array,\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    menuItem: {\n      \"&.active\": {\n        background: \"rgba(0, 0, 0, 0.08)\",\n        \"& .MuiListItemIcon-root\": {\n          color: \"#fff\",\n        },\n      },\n    },\n    menuItemIcon: {\n      color: \"#97c05c\",\n    },\n  })\n);\n\nconst AppMenuItem = (props) => {\n  const { name, link, Icon, items = [] } = props;\n  const classes = useStyles();\n  const isExpandable = items && items.length > 0;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  const MenuItemRoot = (\n    <NavItem className={classes.menuItem} link={link} onClick={handleClick}>\n      {/* Display an icon if any */}\n      <ListItem>\n        {!!Icon && (\n          <ListItemIcon className={classes.menuItemIcon}>\n            <Icon />\n          </ListItemIcon>\n        )}\n        <ListItemText primary={name} inset={!Icon} />\n        {/* Display the expand menu if the item has children */}\n        {isExpandable && !open && <IconExpandMore />}\n        {isExpandable && open && <IconExpandLess />}\n      </ListItem>\n    </NavItem>\n  );\n\n  const MenuItemChildren = isExpandable ? (\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <Divider />\n      <List component=\"div\" disablePadding>\n        {items.map((item, index) => (\n          <AppMenuItem {...item} key={index} />\n        ))}\n      </List>\n    </Collapse>\n  ) : null;\n\n  return (\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n  );\n};\n\nexport default AppMenuItem;\n"]},"metadata":{},"sourceType":"module"}