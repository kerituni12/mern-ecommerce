{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/NavItems.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\"; // import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport NavItem from \"./NavItem\";\nimport { Box, ListItem } from \"@material-ui/core\"; // React runtime PropTypes\n\nexport var AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array\n};\n\nvar AppMenuItem = function AppMenuItem(props) {\n  _s();\n\n  console.log('re-render');\n  var name = props.name,\n      link = props.link,\n      Icon = props.Icon,\n      _props$items = props.items,\n      items = _props$items === void 0 ? [] : _props$items;\n  var classes = useStyles();\n  var isExpandable = items && items.length > 0;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  var MenuItemRoot = __jsx(NavItem, {\n    className: classes.menuItem,\n    link: link,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(ListItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, !!Icon && __jsx(ListItemIcon, {\n    className: classes.menuItemIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(Icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), __jsx(ListItemText, {\n    primary: name,\n    inset: !Icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), isExpandable && !open && __jsx(IconExpandMore, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 35\n    }\n  }), isExpandable && open && __jsx(IconExpandLess, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }\n  })));\n\n  var MenuItemChildren = isExpandable ? __jsx(Collapse, {\n    \"in\": open,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, items.map(function (item, index) {\n    return __jsx(AppMenuItem, _extends({}, item, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }));\n  }))) : null;\n  return __jsx(React.Fragment, null, MenuItemRoot, MenuItemChildren);\n};\n\n_s(AppMenuItem, \"TsAExMDA6yuxA58uE+YzDgG8Jdg=\", false, function () {\n  return [useStyles];\n});\n\n_c = AppMenuItem;\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    menuItem: {\n      \"&.active\": {\n        background: \"rgba(0, 0, 0, 0.08)\",\n        \"& .MuiListItemIcon-root\": {\n          color: \"#fff\"\n        }\n      }\n    },\n    menuItemIcon: {\n      color: \"#97c05c\"\n    }\n  });\n});\nexport default AppMenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppMenuItem\");","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/NavItems.js"],"names":["React","PropTypes","makeStyles","createStyles","List","ListItemIcon","ListItemText","Divider","Collapse","IconExpandLess","IconExpandMore","NavItem","Box","ListItem","AppMenuItemPropTypes","name","string","isRequired","link","Icon","elementType","items","array","AppMenuItem","props","console","log","classes","useStyles","isExpandable","length","useState","open","setOpen","handleClick","MenuItemRoot","menuItem","menuItemIcon","MenuItemChildren","map","item","index","theme","background","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n// import { SvgIconProps } from '@material-ui/core/SvgIcon'\n\nimport List from \"@material-ui/core/List\";\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\n\nimport NavItem from \"./NavItem\";\nimport { Box, ListItem } from \"@material-ui/core\";\n\n// React runtime PropTypes\nexport const AppMenuItemPropTypes = {\n  name: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  Icon: PropTypes.elementType,\n  items: PropTypes.array,\n};\n\nconst AppMenuItem = (props) => {\n  console.log('re-render')\n  const { name, link, Icon, items = [] } = props;\n  const classes = useStyles();\n  const isExpandable = items && items.length > 0;\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  const MenuItemRoot = (\n    <NavItem className={classes.menuItem} link={link} onClick={handleClick}>\n      {/* Display an icon if any */}\n      <ListItem>\n        {!!Icon && (\n          <ListItemIcon className={classes.menuItemIcon}>\n            <Icon />\n          </ListItemIcon>\n        )}\n        <ListItemText primary={name} inset={!Icon} />\n        {/* Display the expand menu if the item has children */}\n        {isExpandable && !open && <IconExpandMore />}\n        {isExpandable && open && <IconExpandLess />}\n      </ListItem>\n    </NavItem>\n  );\n\n  const MenuItemChildren = isExpandable ? (\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n      <Divider />\n      <List component=\"div\" disablePadding>\n        {items.map((item, index) => (\n          <AppMenuItem {...item} key={index} />\n        ))}\n      </List>\n    </Collapse>\n  ) : null;\n\n  return (\n    <>\n      {MenuItemRoot}\n      {MenuItemChildren}\n    </>\n  );\n};\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    menuItem: {\n      \"&.active\": {\n        background: \"rgba(0, 0, 0, 0.08)\",\n        \"& .MuiListItemIcon-root\": {\n          color: \"#fff\",\n        },\n      },\n    },\n    menuItemIcon: {\n      color: \"#97c05c\",\n    },\n  })\n);\n\nexport default AppMenuItem;\n"]},"metadata":{},"sourceType":"module"}