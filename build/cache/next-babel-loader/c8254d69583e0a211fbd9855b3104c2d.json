{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/DrawSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Drawer } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideBar from \"./Sidebar\";\nvar drawerWidth = 200;\nvar drawerClose = 56;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: {\n      width: drawerClose,\n      transition: theme.transitions.create(\"width\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(5)\n    },\n    drawerPaper: {\n      width: drawerWidth\n    }\n  };\n});\n\nfunction DrawSidebar(_ref) {\n  _s();\n\n  var _clsx, _clsx2;\n\n  var smallScreen = _ref.smallScreen,\n      toggle = _ref.toggle,\n      handleDrawerToggle = _ref.handleDrawerToggle,\n      children = _ref.children;\n  console.log(\"draw run\"); // const [date, setDate] = React.useState(Date.now());\n  // console.log(date, Date.now());\n\n  var _React$useState = React.useState(children),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      child = _React$useState2[0],\n      setChild = _React$useState2[1];\n\n  console.log(child === children);\n  var classes = useStyles();\n  return smallScreen ? __jsx(Drawer, {\n    variant: \"temporary\",\n    open: toggle,\n    onClose: handleDrawerToggle,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      keepMounted: true // Better toggle performance on mobile.\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(SideBar, {\n    isToggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })) : __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.drawerOpen, toggle), _defineProperty(_clsx, classes.drawerClose, !toggle), _clsx)),\n    classes: {\n      paper: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.drawerOpen, toggle), _defineProperty(_clsx2, classes.drawerClose, !toggle), _clsx2))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(SideBar, {\n    isToggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(DrawSidebar, \"wzBO2AGReYYbZRkItuvzseZ92rg=\", false, function () {\n  return [useStyles];\n});\n\n_c = DrawSidebar;\nexport default _c2 = React.memo(DrawSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DrawSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/Sidebar/DrawSidebar.js"],"names":["Drawer","clsx","makeStyles","SideBar","drawerWidth","drawerClose","useStyles","theme","drawerOpen","width","transition","transitions","create","easing","sharp","duration","enteringScreen","leavingScreen","content","flexGrow","padding","spacing","drawerPaper","DrawSidebar","smallScreen","toggle","handleDrawerToggle","children","console","log","React","useState","child","setChild","classes","paper","keepMounted","memo"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,IAAMC,WAAW,GAAG,GAApB;AACA,IAAMC,WAAW,GAAG,EAApB;AAEA,IAAMC,SAAS,GAAGJ,UAAU,CAAC,UAACK,KAAD;AAAA,SAAY;AACvCC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAEL,WADG;AAEVM,MAAAA,UAAU,EAAEH,KAAK,CAACI,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,QAAAA,MAAM,EAAEN,KAAK,CAACI,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,QAAAA,QAAQ,EAAER,KAAK,CAACI,WAAN,CAAkBI,QAAlB,CAA2BC;AAFO,OAAlC;AAFF,KAD2B;AAQvCX,IAAAA,WAAW,EAAE;AACXI,MAAAA,KAAK,EAAEJ,WADI;AAEXK,MAAAA,UAAU,EAAEH,KAAK,CAACI,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAC5CC,QAAAA,MAAM,EAAEN,KAAK,CAACI,WAAN,CAAkBE,MAAlB,CAAyBC,KADW;AAE5CC,QAAAA,QAAQ,EAAER,KAAK,CAACI,WAAN,CAAkBI,QAAlB,CAA2BE;AAFO,OAAlC;AAFD,KAR0B;AAevCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CADH;AAEPC,MAAAA,OAAO,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd;AAFF,KAf8B;AAmBvCC,IAAAA,WAAW,EAAE;AACXb,MAAAA,KAAK,EAAEL;AADI;AAnB0B,GAAZ;AAAA,CAAD,CAA5B;;AAwBA,SAASmB,WAAT,OAA4E;AAAA;;AAAA;;AAAA,MAArDC,WAAqD,QAArDA,WAAqD;AAAA,MAAxCC,MAAwC,QAAxCA,MAAwC;AAAA,MAAhCC,kBAAgC,QAAhCA,kBAAgC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAD0E,CAE1E;AACA;;AAH0E,wBAKhDC,KAAK,CAACC,QAAN,CAAeJ,QAAf,CALgD;AAAA;AAAA,MAKnEK,KALmE;AAAA,MAK5DC,QAL4D;;AAM1EL,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAK,KAAKL,QAAtB;AACA,MAAMO,OAAO,GAAG5B,SAAS,EAAzB;AACA,SAAOkB,WAAW,GAChB,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,IAAI,EAAEC,MAFR;AAGE,IAAA,OAAO,EAAEC,kBAHX;AAIE,IAAA,OAAO,EAAE;AACPS,MAAAA,KAAK,EAAED,OAAO,CAACZ;AADR,KAJX;AAOE,IAAA,UAAU,EAAE;AACVc,MAAAA,WAAW,EAAE,IADH,CACS;;AADT,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAEX,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADgB,GAehB,MAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,SAAS,EAAExB,IAAI,qCACZiC,OAAO,CAAC1B,UADI,EACSiB,MADT,0BAEZS,OAAO,CAAC7B,WAFI,EAEU,CAACoB,MAFX,UAFjB;AAME,IAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAElC,IAAI,uCACRiC,OAAO,CAAC1B,UADA,EACaiB,MADb,2BAERS,OAAO,CAAC7B,WAFA,EAEc,CAACoB,MAFf;AADJ,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,MAAC,OAAD;AAAS,IAAA,QAAQ,EAAEA,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAfF;AA+BD;;GAvCQF,W;UAOSjB,S;;;KAPTiB,W;AAyCT,qBAAeO,KAAK,CAACO,IAAN,CAAWd,WAAX,CAAf","sourcesContent":["import { Drawer } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SideBar from \"./Sidebar\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\n\nconst useStyles = makeStyles((theme) => ({\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    width: drawerClose,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n}));\n\nfunction DrawSidebar({ smallScreen, toggle, handleDrawerToggle, children }) {\n  console.log(\"draw run\");\n  // const [date, setDate] = React.useState(Date.now());\n  // console.log(date, Date.now());\n\n  const [child, setChild] = React.useState(children);\n  console.log(child === children);\n  const classes = useStyles();\n  return smallScreen ? (\n    <Drawer\n      variant=\"temporary\"\n      open={toggle}\n      onClose={handleDrawerToggle}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      ModalProps={{\n        keepMounted: true, // Better toggle performance on mobile.\n      }}\n    >\n      <SideBar isToggle={toggle} />\n    </Drawer>\n  ) : (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx({\n        [classes.drawerOpen]: toggle,\n        [classes.drawerClose]: !toggle,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: toggle,\n          [classes.drawerClose]: !toggle,\n        }),\n      }}\n    >\n      <SideBar isToggle={toggle} />\n    </Drawer>\n  );\n}\n\nexport default React.memo(DrawSidebar);\n"]},"metadata":{},"sourceType":"module"}