{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport React from \"react\";\nimport theme from \"configs/theme\";\nimport DashBoard from \"@admin/Components/AdminLayout/AdminLayout\";\nimport { AuthProvider, ProtectRoute } from \"contexts/Auth.context\";\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Remove the server-side injected CSS.\n      var jssStyles = document.querySelector(\"#jss-server-side\");\n\n      if (jssStyles) {\n        jssStyles.parentElement.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          router = _this$props.router;\n      var module;\n\n      if (router.pathname.startsWith(\"/admin\")) {\n        var ComponentWithDashBoard = DashBoard(Component, pageProps);\n        module = __jsx(ProtectRoute, null, __jsx(ComponentWithDashBoard, null), \";\");\n      } else {\n        module = __jsx(ThemeProvider, {\n          theme: theme\n        }, __jsx(CssBaseline, null), __jsx(Component, pageProps));\n      }\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My page\"), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      })), __jsx(AuthProvider, null, module));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}