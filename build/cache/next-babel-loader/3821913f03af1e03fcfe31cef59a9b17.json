{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  }\n}));\n\nfunction DashBoardHOC(Component) {\n  {\n    return /*#__PURE__*/React.memo(function DashBoard(props) {\n      console.log(\"dashboard re-render\");\n      const classes = useStyles();\n      const [toggle, setToggle] = React.useState(true);\n      const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n      const [date, setDate] = React.useState(Date.now());\n      const [child, setChild] = React.useState(props);\n      console.log('hoc', child === props);\n\n      const handleDrawerToggle = () => {\n        setToggle(!toggle);\n      };\n\n      useIsomorphicLayoutEffect(() => {\n        function updateSize() {\n          window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n        }\n\n        window.addEventListener(\"resize\", updateSize); // updateSize()\n\n        return () => window.removeEventListener(\"resize\", updateSize);\n      }, []);\n      return __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), __jsx(DrawSidebar, {\n        toggle: toggle,\n        smallScreen: smallScreen,\n        handleDrawerToggle: handleDrawerToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, __jsx(SideBar, {\n        toggle: toggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      })), __jsx(\"div\", {\n        className: classes.appContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, __jsx(Header, {\n        toggle: toggle,\n        handleToggle: handleDrawerToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }), __jsx(\"main\", {\n        className: classes.content,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: classes.toolbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }), __jsx(Component, _extends({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      })))));\n    });\n  }\n}\n\nexport default DashBoardHOC;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js"],"names":["React","Component","clsx","makeStyles","Drawer","CssBaseline","useIsomorphicLayoutEffect","SideBar","Header","Link","DrawSidebar","drawerWidth","drawerClose","useStyles","theme","root","display","appContent","flex","flexDirection","content","flexGrow","padding","spacing","DashBoardHOC","memo","DashBoard","props","console","log","classes","toggle","setToggle","useState","smallScreen","setSmallScreen","date","setDate","Date","now","child","setChild","handleDrawerToggle","updateSize","window","innerWidth","addEventListener","removeEventListener","toolbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\n\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n}));\n\nfunction DashBoardHOC(Component) { {\n  return React.memo(function DashBoard(props) {\n    console.log(\"dashboard re-render\");\n    const classes = useStyles();\n\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n\n    const [date, setDate] = React.useState(Date.now())\n    const [child, setChild] = React.useState(props);\n    console.log('hoc',child === props);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n      window.addEventListener(\"resize\", updateSize);\n      // updateSize()\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <DrawSidebar toggle={toggle} smallScreen={smallScreen} handleDrawerToggle={handleDrawerToggle}>\n          <SideBar toggle={toggle} />\n        </DrawSidebar>\n\n        <div className={classes.appContent}>\n          <Header toggle={toggle} handleToggle={handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Component {...props} />\n          </main>\n        </div>\n      </div>\n    );\n  });\n}}\n\n\n\nexport default DashBoardHOC;\n"]},"metadata":{},"sourceType":"module"}