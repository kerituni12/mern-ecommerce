{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5)\n  }\n}));\n\nfunction DashBoardHOC(Component) {\n  return /*#__PURE__*/React.memo(function DashBoard(props) {\n    console.log(\"dashboard re-render\");\n    const classes = useStyles();\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n\n      window.addEventListener(\"resize\", updateSize); // updateSize()\n\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), __jsx(DrawSidebar, {\n      toggle: toggle,\n      smallScreen: smallScreen,\n      handleDrawerToggle: handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, __jsx(SideBar, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: classes.appContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      toggle: toggle,\n      handleToggle: handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }), __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })))));\n  });\n}\n\nconst HOC = Component => {\n  const [nprops, setDate] = React.useState(Component);\n  console.log('hoc', nprops === Component);\n  return /*#__PURE__*/React.memo(props => {\n    console.log(\"dashboard rerender\");\n    const classes = useStyles();\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n    const [nprops, setDate] = React.useState(props);\n    console.log(nprops == props);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n\n      window.addEventListener(\"resize\", updateSize); // updateSize()\n\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return __jsx(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, __jsx(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), smallScreen ? __jsx(Drawer, {\n      variant: \"temporary\",\n      open: toggle,\n      onClose: handleDrawerToggle,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      ModalProps: {\n        keepMounted: true // Better toggle performance on mobile.\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(SideBar, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    })) : __jsx(Drawer, {\n      variant: \"permanent\",\n      className: clsx({\n        [classes.drawerOpen]: toggle,\n        [classes.drawerClose]: !toggle\n      }),\n      classes: {\n        paper: clsx({\n          [classes.drawerOpen]: toggle,\n          [classes.drawerClose]: !toggle\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, __jsx(SideBar, {\n      toggle: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    })), __jsx(\"div\", {\n      className: classes.appContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, __jsx(Header, {\n      toggle: toggle,\n      handleToggle: handleDrawerToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }), __jsx(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: classes.toolbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), __jsx(Component, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    })))));\n  });\n};\n\nexport default DashBoardHOC;","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/modules/Admin/Components/AdminLayout/AdminLayout.js"],"names":["React","Component","clsx","makeStyles","Drawer","CssBaseline","useIsomorphicLayoutEffect","SideBar","Header","Link","DrawSidebar","drawerWidth","drawerClose","useStyles","theme","root","display","appContent","flex","flexDirection","content","flexGrow","padding","spacing","DashBoardHOC","memo","DashBoard","props","console","log","classes","toggle","setToggle","useState","smallScreen","setSmallScreen","handleDrawerToggle","updateSize","window","innerWidth","addEventListener","removeEventListener","toolbar","HOC","nprops","setDate","paper","drawerPaper","keepMounted","drawerOpen"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Drawer, CssBaseline } from \"@material-ui/core\";\nimport useIsomorphicLayoutEffect from \"hooks/useLayoutEffect\";\n\nimport SideBar from \"modules/Admin/Components/Sidebar/Sidebar\";\nimport Header from \"modules/Admin/Components/Header/Header\";\nimport Link from \"next/link\";\nimport DrawSidebar from \"../Sidebar/DrawSidebar\";\nconst drawerWidth = 200;\nconst drawerClose = 56;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appContent: {\n    display: \"flex\",\n    flex: \"1 1 0%\",\n    flexDirection: \"column\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(5),\n  },\n}));\n\nfunction DashBoardHOC(Component) {\n  return React.memo(function DashBoard(props) {\n    console.log(\"dashboard re-render\");\n    const classes = useStyles();\n\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n      window.addEventListener(\"resize\", updateSize);\n      // updateSize()\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <DrawSidebar toggle={toggle} smallScreen={smallScreen} handleDrawerToggle={handleDrawerToggle}>\n          <SideBar toggle={toggle} />\n        </DrawSidebar>\n\n        <div className={classes.appContent}>\n          <Header toggle={toggle} handleToggle={handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Component {...props} />\n          </main>\n        </div>\n      </div>\n    );\n  });\n}\n\nconst HOC = (Component) =>{\n\n  const [nprops, setDate] = React.useState(Component);\n  console.log('hoc',nprops === Component);\n\n  return React.memo((props) => {\n    console.log(\"dashboard rerender\");\n    const classes = useStyles();\n\n    const [toggle, setToggle] = React.useState(true);\n    const [smallScreen, setSmallScreen] = React.useState(1000 <= 960);\n\n    const [nprops, setDate] = React.useState(props);\n    console.log(nprops == props);\n\n    const handleDrawerToggle = () => {\n      setToggle(!toggle);\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      function updateSize() {\n        window.innerWidth <= 960 ? setSmallScreen(true) : setSmallScreen(false);\n      }\n      window.addEventListener(\"resize\", updateSize);\n      // updateSize()\n      return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n\n        {smallScreen ? (\n          <Drawer\n            variant=\"temporary\"\n            open={toggle}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better toggle performance on mobile.\n            }}\n          >\n            <SideBar toggle={toggle} />\n          </Drawer>\n        ) : (\n          <Drawer\n            variant=\"permanent\"\n            className={clsx({\n              [classes.drawerOpen]: toggle,\n              [classes.drawerClose]: !toggle,\n            })}\n            classes={{\n              paper: clsx({\n                [classes.drawerOpen]: toggle,\n                [classes.drawerClose]: !toggle,\n              }),\n            }}\n          >\n            <SideBar toggle={toggle} />\n          </Drawer>\n        )}\n\n        <div className={classes.appContent}>\n          <Header toggle={toggle} handleToggle={handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Component {...props} />\n          </main>\n        </div>\n      </div>\n    );\n  })};\n\nexport default DashBoardHOC;\n"]},"metadata":{},"sourceType":"module"}