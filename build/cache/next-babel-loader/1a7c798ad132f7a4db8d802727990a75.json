{"ast":null,"code":"var _jsxFileName = \"/home/kin/Desktop/ecom/frontend/src/contexts/Auth.context.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect, memo } from \"react\";\nimport Router from \"next/router\";\nimport api from \"services/axios\";\nconst AuthContext = /*#__PURE__*/React.createContext({});\n\nfunction AuthProvider({\n  children\n}) {\n  console.log(\"authprovider chay\");\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: isAuthenticated,\n    1: setAuthenticated\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  useEffect(() => {\n    console.log(\"useEffect chay\");\n\n    async function loadUserFromCookies() {\n      const user = localStorage.getItem(\"userInfo\");\n      if (user) setUser(JSON.parse(user)); //Use can check user by request to server with autocookie send in request\n      // setLoading(false);\n    }\n\n    loadUserFromCookies();\n    return () => console.log(\"re-mount auth contexnt\");\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const {\n        data: {\n          user\n        }\n      } = await api.post(\"api/auth/login\", {\n        email,\n        password\n      });\n\n      if (user) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\n        await setUser(user);\n        await Router.push(\"/admin\");\n      }\n    } catch (err) {\n      return console.error(err.response);\n    }\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(\"userInfo\");\n    await api.post(\"auth/logout\");\n    setUser(null);\n    await Router.push(\"/login\");\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      user,\n      login,\n      loading,\n      logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nfunction useAuth() {\n  useContext(AuthContext);\n}\n\nfunction ProtectRoute({\n  children\n}) {\n  const {\n    isAuthenticated,\n    loading\n  } = useContext(AuthContext);\n\n  if (!isAuthenticated) {\n    console.log(true);\n    false && Router.push(\"/login\");\n  }\n\n  return children;\n}\n\nexport { AuthContext, AuthProvider, useAuth, ProtectRoute };","map":{"version":3,"sources":["/home/kin/Desktop/ecom/frontend/src/contexts/Auth.context.js"],"names":["React","useState","useContext","useEffect","memo","Router","api","AuthContext","createContext","AuthProvider","children","console","log","user","setUser","isAuthenticated","setAuthenticated","loading","setLoading","loadUserFromCookies","localStorage","getItem","JSON","parse","login","email","password","data","post","setItem","stringify","push","err","error","response","logout","removeItem","useAuth","ProtectRoute"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect, memo } from \"react\";\nimport Router from \"next/router\";\n\nimport api from \"services/axios\";\n\nconst AuthContext = React.createContext({});\n\nfunction AuthProvider({ children }) {\n  console.log(\"authprovider chay\");\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    console.log(\"useEffect chay\");\n    async function loadUserFromCookies() {\n      const user = localStorage.getItem(\"userInfo\");\n      if (user) setUser(JSON.parse(user));\n      //Use can check user by request to server with autocookie send in request\n\n      // setLoading(false);\n    }\n    loadUserFromCookies();\n    return () => console.log(\"re-mount auth contexnt\");\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const {\n        data: { user },\n      } = await api.post(\"api/auth/login\", { email, password });\n      if (user) {\n        localStorage.setItem(\"userInfo\", JSON.stringify(user));\n        await setUser(user);\n        await Router.push(\"/admin\");\n      }\n    } catch (err) {\n      return console.error(err.response);\n    }\n  };\n\n  const logout = async () => {\n    localStorage.removeItem(\"userInfo\");\n    await api.post(\"auth/logout\");\n    setUser(null);\n    await Router.push(\"/login\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated: !!user, user, login, loading, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nfunction useAuth() {\n  useContext(AuthContext);\n}\n\nfunction ProtectRoute({ children }) {\n  const { isAuthenticated, loading } = useContext(AuthContext);\n  if (!isAuthenticated) {\n    console.log(typeof window === 'undefined')\n    typeof window !== 'undefined' && Router.push(\"/login\");\n  }\n\n  return children;\n}\n\nexport { AuthContext, AuthProvider, useAuth, ProtectRoute };\n"]},"metadata":{},"sourceType":"module"}